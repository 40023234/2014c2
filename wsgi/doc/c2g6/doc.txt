
程式語言簡介
============

一、程式語言的分類：
------------

### (一) 依階層劃分： ###

1. 低階語言
(1) 機器語言　010100111000101
(2) 組合語言　mov ah,0ah
2. 高階語言
又稱編譯語言，一般常見的如Basic，C，Pascal，Fortran 等。

### (二) 依使用模式劃分： ###

1. 直譯式程式語言
將原始程式的指令逐一的翻譯並執行，不需要經過編譯，如Basic、Logo、Html 等。
2. 編譯式(解譯式) 程式語言
原始程式，需要經過編譯器編譯之後，輸出為電腦中直接執行的目的程式，如C、C
++、Pascal... 等。

### (三) 依應用劃分： ###

1. 一般用途
指用於一般範圍的通用程式語言，如Basic、Pascal、C... 等。
2. 特殊用途
應用於特殊領域的程式語言，例如應用於商業的Cobol，工程的Fortran，網路的
Html 或人工智慧領域的程式語言如Lisp... 等。

二、程式語言發展環境：
------------

### (一) 直譯式開發環境 ###

輸入的程式能立即地看到輸出結果，不需再經過編譯的動作，原始程式小，需透過開發環境
才能執行程式，程式的保密性不是很好，所以很少人用來開發軟體。但是對初學程式設計者
而言，相當方便，例如GwBASIC、dBase Ⅲ Plus 等等。

### (二) 編譯式開發環境 ###

利用文書編輯器或是系統所附的程式編輯器，將程式鍵入之後，再利用編譯軟體對原始程式
進行編譯後，產生可供系統執行的目的程式檔。

### (三) 視覺化開發環境 ###

使用者只需使用一隻滑鼠，在畫面上點、畫出需要的物件，了解每個物件的屬性及控制方
式，再對該物件進行控制或設計，即能設計出軟體。例如Visual Basic、Visual C++、
Delhpi …等等。

三、現代科技與程式設計：
------------

### (一) 全球資訊網 ###
結合網頁設計的程式語言，如Java、VBScript、PHP、ASP 等等。

### (二) 平板電腦，手機 ###
Java、Android Programming、iOS Programming、Windows APP Programming。

(理工科) 大學生應具備的電腦軟體知識
============

(一) Latex
------------

編輯軟體，編輯包含大量數學符號的文章。(x + y)2

### 資源 ###

1.LaTeX 項目的官方網站http://www.latex-project.org/
2.MiKTeX 官方網站http://www.miktex.org/
3.中文Wiki 百科- Latex http://zh.wikipedia.org/w/index.php?title=Latex&variant=zh-tw
4.cwTeX 中文tex 排版

(二) GSP or GeoGebra
------------

動態幾何操作軟體。

### 資源 ###

1.GSP 官方網頁http://www.dynamicgeometry.com/
2.GeoGebra 官方網頁http://www.geogebra.org/cms/
3.陳創義老師微分幾何/數學與電腦/通識(數學活動與思維) 課程
4.左台益老師高等幾何課程/數學數位學習環境設計暑期課程
5.趙文敏老師數學教學解題/解析幾何課程

(三) Matlab (or Mathematica、Maple etc)
------------

數值計算軟體。

### 資源 ###

1.Matlab 官方網頁http://www.mathworks.com/index.shtml
2.Mathematica 官方網頁http://www.wolfram.com/
3.Maple 官方網頁http://www.maplesoft.com/
4.黃聰明老師程式設計課程

(四) Python
------------

一款簡單強大又好用的動態語言，為本課程所要學習的語言。

### 資源 ###

1.Python 官方網頁http://www.python.org/
2.python 正確發音http://bbs.chinaunix.net/thread-1453910-1-1.html

(五) C++
------------

C++ 是C 語言的延伸，是目前世界上最流行，最廣泛被使用的電腦程式語言。

Why Python?
============

簡單易學
------------

可讀性佳
------------

語法簡單明瞭、強制縮排

豐富的標準函式庫
------------

眾多的社群與第三方程式庫
------------

TurboGears、Django、Numpy...

活躍的社群
------------

物件導向
------------

動態語言
------------

開發快速
------------

跨平台
------------

Windows, Linux, MacOS

被廣泛使用
------------

NASA、Google App Engine、Youtube、BitTorrent ...

容易擴充和嵌入
------------

深思熟慮的設計哲學
------------

ex: The Zen of Python

良好的文件
------------

課程大綱
============

(一) 參考書目
------------

1.Learning Python, Fourth Edition by Mark Lutz
2.Python 學習手冊第三版譯者：陳建勳
3.精通Python 3 程式設計(第二版) 譯者：蔣大偉

(二) 本學期預定學到的東西
------------

1.Python 基本程式設計能力
2.Python + Numpy/SciPy 數值計算能力
3.Python 其它模組應用

(三) 上課/計分方式
-----------

1.投影片教學
2.課堂實作/出席20％
3.期中考30％
4.期末報告30％
5.作業20％

Python 程式語言簡介
============

歷史：
------------

Python (發音) 是1989 年由阿姆斯特丹的Guido van Rossum 所創立的，是
為了改良ABC 語言所開發的一種物件導向程式語言。當初採用Python
（大蟒蛇的意思）作為程序的名字，是因為他是Monty Python 的飛行馬
戲團的愛好者。

早期Python 是以C 語言為基底撰寫而成，它結合了Unix shell 和C 的
習慣，同時支援modules 和packages，另外Python 為跨平台程式語言
也支援unicode 字元。是一個功能強大而完善的通用型語言，可以用於
很多種軟體開發動態程式，發展至今已有十多年的歷史，成熟且穩定。

Guido van Rossum 在2005 年底成為Google 公司雇員，該公司將
Python 程式語言列為程式員的三大官方語言之一，意指允許員工使用
Python 實作產品與服務。

Python 的安裝
============

這裡是針對Windows 的安裝做解說。

(一) 從官方網頁下載
------------

http://www.python.org/

(二) 從老師教學網頁下載
------------

http://www.math.ntnu.edu.tw/python/
Windows x86 MSI Installer (3.3.0)
Windows X86-64 MSI Installer (3.3.0)

點擊兩下開始安裝:
Install for all user <Next>
Select Destination Directory : C:nPython33n <Next>
Custimize Python 3.3.0 <Next>

安裝好後，在程式集裡會有Python 3.3.0 程式，完成安裝。

Python 的交談式界面
============

Python IDLE (Python GUI)
------------

Python 的編輯器(1)
============

要開啟編輯器，先開啟Python 的IDLE (Python GUI)，然後按”File” ->”New Window”
------------

Python 的編輯器(2)
============

得到一個檔名為*Untitled* 的編輯畫面
------------

Python 的編輯器(3)
============

接著你必需要把這個Python 程式存到你的電腦裡才能執行，
按”File”->”Save”，然後選擇你要儲存的地方，以及儲存的檔名，有一點
請注意的是，在檔名後面請加上”.py”，這個編輯器並不會自動幫你加。
例如你的檔名是hello，就打hello.py ，然後按儲存就可以了。存好你的
第一個程式後，如何執行呢？按”Run”->”Run Module F5” 或直接按F5
也可以。
------------

Python 的編輯器(4)
============

這個Python 程式的執行結果就會出現在交談式介面裡
------------

註解的寫法
============

註解可以用# 開頭，後面均為註解文字
字串””” 開頭，一樣以””” 結束也可以當做註解
------------

特別的註解shebang
============

在unix 上的Python 程式第一行有一個特別的註解列，以# ! 開頭，是
註明該程式檔是透過那一個直譯器來執行的：
# !/usr/bin/python3
或是
# !/usr/bin/env python3
Windows 系統上並不需要使用shebang，但是為了跨平臺，以後程式均
採用第二種shebang 寫法。

Windows 系統上並不需要使用shebang，但是為了跨平臺，以後程式均
採用第二種shebang 寫法。

物件參照(變數)
============

objectReference = value
物件參照(變數) -> 記憶體物件(值)
a = 7
b = ”blue”
c = a
用於物件參照的名稱(識別字(identifier)) 有以下限制：
(1) 不能為Python 的任何關鍵字。(for, int, def ...)
(2) 必須以一個字母或底線符號為開頭。
(3) 識別字的大小寫有別。
# 以下為錯誤示範
7eleven = ”24 hr open”
print = 2
Adog = 6
big = adog

Python 的資料型態
============

Python 的數值資料型態有整數與浮點數兩大類。
整數型態又分為兩個：int (整數) 與bool (布林值)。
整數(int) 的大小只受限於記憶體大小，基本上是沒有限制位數的。
布林值(bool) 只有兩個物件： True 與False。
Python 提供了三個邏輯運算符：and、or 與not。

-------     ------  ------
and         True    False 
True        True    False 
False       False   False 
-------     ------  ------

-------     ------  ------
or          True    False 
True        True    True   
False       True    False 
-------     ------  ------

-------     ------  ------
not         True    False 
            False   True 
-------     ------  ------

example:
» t = True
» f = False
» t and f
False
» t and True
True

數值運算符與函式
============

-------------------------------------------------------------
    語法    說明
----------- -----------------------------------------------
    x + y   將數字x 與數字y 相加
    
    x - y   將x 減去y
    
    x * y   將x 乘以y
    
    x/y     將x 除以y；產生一個浮點數(float)(或是複數(complex)，
            如果x 或y 是複數的話)
   
    x//y    將x 除以y；捨掉任何小數部份，產生一個整數；
            另外請參照round() 函式
    
    x%y     產生x 除以y 的模數(餘數)
    
    x**y    x 的y 次方；另見pow() 函式
    
    -x      取x 的負值

    +x      什麼都不做；有時可用於增加程式碼的可讀性

    abs(x)  傳回x 的絕對值

divmod(x,y) 傳回x 除以y 的商數和餘數，結果為兩個整數的元組

   pow(x,y) x 的y 次方；功能如同** 運算符

 round(x,n) 如果n 是負整數，則傳回x 對n 位整數做四捨五入的結果；
            如果n 是正整數，則傳回x 四捨五入去到第n 位小數的結果
-------------------------------------------------------------

數學公式的表示
===========

1 + 2 + 3 +.... + 100 =[100(100 + 1)]/2= 5050
Python 的寫法：
» (100*(100+1))/2
5050.0
寫成程式的寫法：
#!/usr/bin/env python3
# 指定n 的值
n = 100
# 用Python 寫的加總公式
result = (n*(n+1))/2
# 將結果列印出來
print(result)

二元數值運算符的增強賦值版本
============

所有的二元值運算符( +、-、*、/、//、% 與** ) 都具有增強賦值的
版本( +=、-=、*=、/=、//=、%=、**= )。
x = x op y 邏輯上等效於增強賦值版本  x op = y

1.x = x + 1 可以寫成x += 1
2.y = y - 3 可以寫成y -= 3
3.z = z * 5 可以寫成z *= 5
4.a = a / 7 可以寫成a /= 7
5.b = b // 2 可以寫成b //= 2
6.c = c % 4 可以寫成c %= 4
7.d =d ** 6 可以寫成d **= 6

整數轉換函式
============

-------------------------------------------------------------
  語法       說明    
-----------  -----------------------------------------------
  bin(i)     以字串傳回整數i 的二進制表示法
             例如：bin(2013)==’0b11111011101’

  hex(i)     以字串傳回整數i 的十六進制表示法
             例如：hex(2013)==’0x7dd’

  int(x)     將物件x 轉換成一個整數；轉換失敗會引發ValueError，
             如果x 的資料型態不支援整數轉換，則會引發TypeError。
             如果x 是浮點數，則會捨去小數部份。

int(s, base) 將字串s 依基底base 轉換成一個整數；失敗會引發
             ValueError，基底base 可以指定為2 到36 的整數。

   oct(i)    以字串傳回整數i 的八進制表示法
             例如：oct(2013)==’0o3735’
-------------------------------------------------------------

二進制數字表示的前綴為0b 或0B
------------

八進制數字表示的前綴為0o 或0O
------------

十六進制數字表示的前綴為0x 或0X
------------

整數逐位元運算符
============

-------------------------------------------------------------
  語法       說明    
-----------  -----------------------------------------------
  i | j      整數i 與整數j 的逐位元OR 運算；
             負數假定會使用2 的補數來表示。
  
  i ^ j i    與j 的逐位元XOR(互斥或) 運算
  
  i & j i    與j 的逐位元AND 運算

  i « j i    被左位移j 個位元；功能如同不做溢位檢查的i  (2  j)

  i » j i    被右位移j 個位元；功能如同不做溢位檢查的i//(2  j)

  -i         將i 的位元值反相
-------------------------------------------------------------

逐位元運算符之運用：使用單一整數，對許多True/False 的旗標做個別位元的測
試。( 0b100110 & 0b000100 檢查第3 位是否True)
------------

所有逐位元運算符都具有增強賦值的版本。(|=、^=、&=、«=、»=)
------------

 

